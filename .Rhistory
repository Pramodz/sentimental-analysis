q3=test3[1,]
qq1<-melt(q1, ,var='Score')
qq2<-melt(q2, ,var='Positive')
qq3<-melt(q3, ,var='Negative')
qq1['Score'] = NULL
qq2['Positive'] = NULL
qq3['Negative'] = NULL
#Creating data frame
table1 = data.frame(Text=result[[1]]$text, Score=qq1)
table2 = data.frame(Text=result[[2]]$text, Score=qq2)
table3 = data.frame(Text=result[[3]]$text, Score=qq3)
#Merging three data frames into one
table_final=data.frame(Text=table1$Text, Positive=table2$value, Negative=table3$value, Score=table1$value)
return(table_final)
}
percentage<-function(table_final)
{
#Positive Percentage
#Renaming
posSc=table_final$Positive
negSc=table_final$Negative
#Adding column
table_final$PosPercent = posSc/ (posSc+negSc)
#Replacing Nan with zero
pp = table_final$PosPercent
pp[is.nan(pp)] <- 0
table_final$PosPercent = pp*100
#Negative Percentage
#Adding column
table_final$NegPercent = negSc/ (posSc+negSc)
#Replacing Nan with zero
nn = table_final$NegPercent
nn[is.nan(nn)] <- 0
table_final$NegPercent = nn*100
return(table_final)
}
twtList<-searchTwitter('narendramodi', n=100, lang="en")
twtList
twtList
twtList<-searchTwitter('narendramodi', n=100, lang="en")
PrepareTwitter<-function()
{
library("twitteR")
library("stringr")
library("ROAuth")
library("RCurl")
library("ggplot2")
library("reshape")
library("tm")
library("RJSONIO")
library("wordcloud")
library("gridExtra")
library("plotrix")
library("plyr")
library("reshape2")
}
PrepareTwitter()
Authentication<-function()
{
consumer_key <-"EH0BUyWGL3Q1x2n7tXc2JALgP"
consumer_secret <- "r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK"
access_token<-"948219954628665345-Mnu7D6LQafUx9FGjCas4I3ul8EMwIf0"
access_secret <- "DQCRIWubjNX67ftCUBUt3tqw20MDn26LJdS9OocKkhorI"
setup_twitter_oauth(consumer_key ,consumer_secret, access_token,  access_secret )
cred <- OAuthFactory$new(consumerKey='EH0BUyWGL3Q1x2n7tXc2JALgP', consumerSecret='r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake
}
Authentication()
TweetFrame<-function(twtList)
{
df<- do.call("rbind",a<-lapply(twtList,as.data.frame))
#removes emoticons
df$text <- sapply(df$text,function(row) iconv(row, "latin1", "ASCII", sub=""))
df$text = gsub("(f|ht)tp(s?)://(.*)[.][a-z]+", "", df$text)
return (df$text)
}
pos.words=scan('/home/suhas_kashyap/Downloads/sentimental-anlysis-master/sen/pwords.txt', what='character',comment.char=';')
neg.words=scan('/home/suhas_kashyap/Downloads/sentimental-anlysis-master/sen/nwords.txt', what='character',comment.char=';')
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
list=lapply(sentences, function(sentence, pos.words, neg.words)
{
sentence = gsub('[[:punct:]]',' ',sentence)
sentence = gsub('[[:cntrl:]]','',sentence)
sentence = gsub('\\d+','',sentence)
sentence = gsub('\n','',sentence)
sentence = tolower(sentence)
word.list = str_split(sentence, '\\s+')
words = unlist(word.list)
pos.matches = match(words, pos.words)
neg.matches = match(words, neg.words)
pos.matches = !is.na(pos.matches)
neg.matches = !is.na(neg.matches)
pp=sum(pos.matches)
nn = sum(neg.matches)
score = sum(pos.matches) - sum(neg.matches)
list1=c(score, pp, nn)
return (list1)
}, pos.words, neg.words)
score_new=lapply(list, `[[`, 1)
pp1=score=lapply(list, `[[`, 2)
nn1=score=lapply(list, `[[`, 3)
scores.df = data.frame(score=score_new, text=sentences)
positive.df = data.frame(Positive=pp1, text=sentences)
negative.df = data.frame(Negative=nn1, text=sentences)
list_df=list(scores.df, positive.df, negative.df)
return(list_df)
}
library(reshape)
sentimentAnalyser<-function(result)
{
#Creating a copy of result data frame
test1=result[[1]]
test2=result[[2]]
test3=result[[3]]
#Creating three different data frames for Score, Positive and Negative
#Removing text column from data frame
test1$text=NULL
test2$text=NULL
test3$text=NULL
#Storing the first row(Containing the sentiment scores) in variable q
q1=test1[1,]
q2=test2[1,]
q3=test3[1,]
qq1<-melt(q1, ,var='Score')
qq2<-melt(q2, ,var='Positive')
qq3<-melt(q3, ,var='Negative')
qq1['Score'] = NULL
qq2['Positive'] = NULL
qq3['Negative'] = NULL
#Creating data frame
table1 = data.frame(Text=result[[1]]$text, Score=qq1)
table2 = data.frame(Text=result[[2]]$text, Score=qq2)
table3 = data.frame(Text=result[[3]]$text, Score=qq3)
#Merging three data frames into one
table_final=data.frame(Text=table1$Text, Positive=table2$value, Negative=table3$value, Score=table1$value)
return(table_final)
}
percentage<-function(table_final)
{
#Positive Percentage
#Renaming
posSc=table_final$Positive
negSc=table_final$Negative
#Adding column
table_final$PosPercent = posSc/ (posSc+negSc)
#Replacing Nan with zero
pp = table_final$PosPercent
pp[is.nan(pp)] <- 0
table_final$PosPercent = pp*100
#Negative Percentage
#Adding column
table_final$NegPercent = negSc/ (posSc+negSc)
#Replacing Nan with zero
nn = table_final$NegPercent
nn[is.nan(nn)] <- 0
table_final$NegPercent = nn*100
return(table_final)
}
twtList<-searchTwitter('narendramodi', n=100, lang="en")
twtList
View(a[[1]])
shiny::runApp('sh')
PrepareTwitter<-function()
{
library("twitteR")
library("stringr")
library("ROAuth")
library("RCurl")
library("ggplot2")
library("reshape")
library("tm")
library("RJSONIO")
library("wordcloud")
library("gridExtra")
library("plotrix")
library("plyr")
library("reshape2")
}
PrepareTwitter()
Authentication<-function()
{
consumer_key <-"EH0BUyWGL3Q1x2n7tXc2JALgP"
consumer_secret <- "r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK"
access_token<-"948219954628665345-Mnu7D6LQafUx9FGjCas4I3ul8EMwIf0"
access_secret <- "DQCRIWubjNX67ftCUBUt3tqw20MDn26LJdS9OocKkhorI"
setup_twitter_oauth(consumer_key ,consumer_secret, access_token,  access_secret )
cred <- OAuthFactory$new(consumerKey='EH0BUyWGL3Q1x2n7tXc2JALgP', consumerSecret='r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake
}
Authentication()
shiny::runApp('sh')
EnsurePackage<-function(x)
{x <- as.character(x)
if (!require(x,character.only=TRUE))
{
install.packages(pkgs=x,repos="http://cran.r-project.org")
require(x,character.only=TRUE)
}
}
PrepareTwitter<-function()
{
EnsurePackage("twitteR")
EnsurePackage("stringr")
EnsurePackage("ROAuth")
EnsurePackage("RCurl")
EnsurePackage("ggplot2")
EnsurePackage("reshape")
EnsurePackage("tm")
EnsurePackage("RJSONIO")
EnsurePackage("wordcloud")
EnsurePackage("gridExtra")
EnsurePackage("plotrix")
EnsurePackage("plyr")
EnsurePackage("reshape2")
}
PrepareTwitter()
Authentication<-function()
{
consumer_key <-"EH0BUyWGL3Q1x2n7tXc2JALgP"
consumer_secret <- "r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK"
access_token<-"948219954628665345-Mnu7D6LQafUx9FGjCas4I3ul8EMwIf0"
access_secret <- "DQCRIWubjNX67ftCUBUt3tqw20MDn26LJdS9OocKkhorI"
setup_twitter_oauth(consumer_key ,consumer_secret, access_token,  access_secret )
cred <- OAuthFactory$new(consumerKey='EH0BUyWGL3Q1x2n7tXc2JALgP', consumerSecret='r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake
}
Authentication()
shiny::runApp('sh')
PrepareTwitter<-function()
{
library("twitteR")
library("stringr")
library("ROAuth")
library("RCurl")
library("ggplot2")
library("reshape")
library("tm")
library("RJSONIO")
library("wordcloud")
library("gridExtra")
library("plotrix")
library("plyr")
library("reshape2")
}
PrepareTwitter()
Authentication<-function()
{
consumer_key <-"EH0BUyWGL3Q1x2n7tXc2JALgP"
consumer_secret <- "r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK"
access_token<-"948219954628665345-Mnu7D6LQafUx9FGjCas4I3ul8EMwIf0"
access_secret <- "DQCRIWubjNX67ftCUBUt3tqw20MDn26LJdS9OocKkhorI"
setup_twitter_oauth(consumer_key ,consumer_secret, access_token,  access_secret )
cred <- OAuthFactory$new(consumerKey='EH0BUyWGL3Q1x2n7tXc2JALgP', consumerSecret='r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake
}
Authentication()
runApp('sh')
shiny::runApp('sh')
EnsurePackage<-function(x)
{x <- as.character(x)
if (!require(x,character.only=TRUE))
{
install.packages(pkgs=x,repos="http://cran.r-project.org")
require(x,character.only=TRUE)
}
}
PrepareTwitter<-function()
{
EnsurePackage("twitteR")
EnsurePackage("stringr")
EnsurePackage("ROAuth")
EnsurePackage("RCurl")
EnsurePackage("ggplot2")
EnsurePackage("reshape")
EnsurePackage("tm")
EnsurePackage("RJSONIO")
EnsurePackage("wordcloud")
EnsurePackage("gridExtra")
EnsurePackage("plotrix")
EnsurePackage("plyr")
EnsurePackage("reshape2")
}
PrepareTwitter()
Authentication<-function()
{
consumer_key <-"EH0BUyWGL3Q1x2n7tXc2JALgP"
consumer_secret <- "r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK"
access_token<-"948219954628665345-Mnu7D6LQafUx9FGjCas4I3ul8EMwIf0"
access_secret <- "DQCRIWubjNX67ftCUBUt3tqw20MDn26LJdS9OocKkhorI"
setup_twitter_oauth(consumer_key ,consumer_secret, access_token,  access_secret )
cred <- OAuthFactory$new(consumerKey='EH0BUyWGL3Q1x2n7tXc2JALgP', consumerSecret='r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake
}
Authentication()
TweetFrame<-function(twtList)
{
df<- do.call("rbind",a<-lapply(twtList,as.data.frame))
#removes emoticons
df$text <- sapply(df$text,function(row) iconv(row, "latin1", "ASCII", sub=""))
df$text = gsub("(f|ht)tp(s?)://(.*)[.][a-z]+", "", df$text)
return (df$text)
}
pos.words=scan('/home/suhas_kashyap/Downloads/sentimental-anlysis-master/sen/pwords.txt', what='character',comment.char=';')
neg.words=scan('/home/suhas_kashyap/Downloads/sentimental-anlysis-master/sen/nwords.txt', what='character',comment.char=';')
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
list=lapply(sentences, function(sentence, pos.words, neg.words)
{
sentence = gsub('[[:punct:]]',' ',sentence)
sentence = gsub('[[:cntrl:]]','',sentence)
sentence = gsub('\\d+','',sentence)
sentence = gsub('\n','',sentence)
sentence = tolower(sentence)
word.list = str_split(sentence, '\\s+')
words = unlist(word.list)
pos.matches = match(words, pos.words)
neg.matches = match(words, neg.words)
pos.matches = !is.na(pos.matches)
neg.matches = !is.na(neg.matches)
pp=sum(pos.matches)
nn = sum(neg.matches)
score = sum(pos.matches) - sum(neg.matches)
list1=c(score, pp, nn)
return (list1)
}, pos.words, neg.words)
score_new=lapply(list, `[[`, 1)
pp1=score=lapply(list, `[[`, 2)
nn1=score=lapply(list, `[[`, 3)
scores.df = data.frame(score=score_new, text=sentences)
positive.df = data.frame(Positive=pp1, text=sentences)
negative.df = data.frame(Negative=nn1, text=sentences)
list_df=list(scores.df, positive.df, negative.df)
return(list_df)
}
library(reshape)
sentimentAnalyser<-function(result)
{
#Creating a copy of result data frame
test1=result[[1]]
test2=result[[2]]
test3=result[[3]]
#Creating three different data frames for Score, Positive and Negative
#Removing text column from data frame
test1$text=NULL
test2$text=NULL
test3$text=NULL
#Storing the first row(Containing the sentiment scores) in variable q
q1=test1[1,]
q2=test2[1,]
q3=test3[1,]
qq1<-melt(q1, ,var='Score')
qq2<-melt(q2, ,var='Positive')
qq3<-melt(q3, ,var='Negative')
qq1['Score'] = NULL
qq2['Positive'] = NULL
qq3['Negative'] = NULL
#Creating data frame
table1 = data.frame(Text=result[[1]]$text, Score=qq1)
table2 = data.frame(Text=result[[2]]$text, Score=qq2)
table3 = data.frame(Text=result[[3]]$text, Score=qq3)
#Merging three data frames into one
table_final=data.frame(Text=table1$Text, Positive=table2$value, Negative=table3$value, Score=table1$value)
return(table_final)
}
percentage<-function(table_final)
{
#Positive Percentage
#Renaming
posSc=table_final$Positive
negSc=table_final$Negative
#Adding column
table_final$PosPercent = posSc/ (posSc+negSc)
#Replacing Nan with zero
pp = table_final$PosPercent
pp[is.nan(pp)] <- 0
table_final$PosPercent = pp*100
#Negative Percentage
#Adding column
table_final$NegPercent = negSc/ (posSc+negSc)
#Replacing Nan with zero
nn = table_final$NegPercent
nn[is.nan(nn)] <- 0
table_final$NegPercent = nn*100
return(table_final)
}
twtList<-searchTwitter('narendramodi', n=100, lang="en")
twtList
list_df
tweets<-TweetFrame(twtList)
result<-score.sentiment(tweets, pos.words, neg.words, .progress='none')
result
table()
table1
sentimentAnalyser<-function(result)
{
#Creating a copy of result data frame
test1=result[[1]]
test2=result[[2]]
test3=result[[3]]
#Creating three different data frames for Score, Positive and Negative
#Removing text column from data frame
test1$text=NULL
test2$text=NULL
test3$text=NULL
#Storing the first row(Containing the sentiment scores) in variable q
q1=test1[1,]
q2=test2[1,]
q3=test3[1,]
qq1<-melt(q1, ,var='Score')
qq2<-melt(q2, ,var='Positive')
qq3<-melt(q3, ,var='Negative')
qq1['Score'] = NULL
qq2['Positive'] = NULL
qq3['Negative'] = NULL
#Creating data frame
table1 = data.frame(Text=result[[1]]$text, Score=qq1)
table2 = data.frame(Text=result[[2]]$text, Score=qq2)
table3 = data.frame(Text=result[[3]]$text, Score=qq3)
#Merging three data frames into one
table_final=data.frame(Text=table1$Text, Positive=table2$value, Negative=table3$value, Score=table1$value)
return(table_final)
}
percentage<-function(table_final)
{
#Positive Percentage
#Renaming
posSc=table_final$Positive
negSc=table_final$Negative
#Adding column
table_final$PosPercent = posSc/ (posSc+negSc)
#Replacing Nan with zero
pp = table_final$PosPercent
pp[is.nan(pp)] <- 0
table_final$PosPercent = pp*100
#Negative Percentage
#Adding column
table_final$NegPercent = negSc/ (posSc+negSc)
#Replacing Nan with zero
nn = table_final$NegPercent
nn[is.nan(nn)] <- 0
table_final$NegPercent = nn*100
return(table_final)
}
table_final<-sentimentAnalyser(result)
View(table_final)
View(table_final)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('sh')
shiny::runApp('sh')
shiny::runApp('sh')
shiny::runApp('sh')
shiny::runApp('sh')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('sh')
shiny::runApp('sh')
shiny::runApp('sh')
PrepareTwitter<-function()
{
library("twitteR")
library("stringr")
library("ROAuth")
library("RCurl")
library("ggplot2")
library("reshape")
library("tm")
library("RJSONIO")
library("wordcloud")
library("gridExtra")
library("plotrix")
library("plyr")
library("reshape2")
}
PrepareTwitter()
Authentication<-function()
{
consumer_key <-"EH0BUyWGL3Q1x2n7tXc2JALgP"
consumer_secret <- "r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK"
access_token<-"948219954628665345-Mnu7D6LQafUx9FGjCas4I3ul8EMwIf0"
access_secret <- "DQCRIWubjNX67ftCUBUt3tqw20MDn26LJdS9OocKkhorI"
setup_twitter_oauth(consumer_key ,consumer_secret, access_token,  access_secret )
cred <- OAuthFactory$new(consumerKey='EH0BUyWGL3Q1x2n7tXc2JALgP', consumerSecret='r1Epe6aKmpTfMaq0fsI5qCV6A9jvGuhzqrkVIGCm7YV0abNnpK',requestURL='https://api.twitter.com/oauth/request_token',accessURL='https://api.twitter.com/oauth/access_token',authURL='https://api.twitter.com/oauth/authorize')
cred$handshake
}
Authentication()
twtList<-searchTwitter('narendramodi', n=100, lang="en")
View(twtList)
View(twtList)
View(twtList)
View(twtList)
class(twtList)
View(result)
View(result)
View(result[[1]])
shiny::runApp()
shiny::runApp('sh')
shiny::runApp()
shiny::runApp('sh')
